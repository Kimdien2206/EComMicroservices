// <auto-generated />
using System;
using ECom.Services.Reports.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECom.Services.Reports.Migrations
{
    [DbContext(typeof(ReportDbContext))]
    partial class ReportDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECom.Services.Reports.Models.DailyReport", b =>
                {
                    b.Property<DateOnly>("Date")
                        .HasColumnType("Date")
                        .HasColumnName("date");

                    b.Property<int>("Income")
                        .HasColumnType("int")
                        .HasColumnName("income");

                    b.Property<DateOnly>("Month")
                        .HasColumnType("Date")
                        .HasColumnName("month");

                    b.Property<DateOnly>("MonthNavigationMonth")
                        .HasColumnType("Date");

                    b.Property<int>("Outcome")
                        .HasColumnType("int")
                        .HasColumnName("outcome");

                    b.Property<int>("Profit")
                        .HasColumnType("int")
                        .HasColumnName("profit");

                    b.Property<int>("SoldQuantity")
                        .HasColumnType("int")
                        .HasColumnName("sold_quantity");

                    b.HasKey("Date");

                    b.HasIndex("MonthNavigationMonth");

                    b.ToTable("DailyReports");
                });

            modelBuilder.Entity("ECom.Services.Reports.Models.DailyReportDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("Date")
                        .HasColumnName("date");

                    b.Property<DateOnly>("DateNavigationDate")
                        .HasColumnType("Date");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.HasIndex("DateNavigationDate");

                    b.ToTable("DailyReportDetail");
                });

            modelBuilder.Entity("ECom.Services.Reports.Models.MonthlyReport", b =>
                {
                    b.Property<DateOnly>("Month")
                        .HasColumnType("Date")
                        .HasColumnName("month");

                    b.Property<int>("Income")
                        .HasColumnType("int")
                        .HasColumnName("income");

                    b.Property<int>("Outcome")
                        .HasColumnType("int")
                        .HasColumnName("outcome");

                    b.Property<int>("Profit")
                        .HasColumnType("int")
                        .HasColumnName("profit");

                    b.Property<int>("SoldQuantity")
                        .HasColumnType("int")
                        .HasColumnName("sold_quantity");

                    b.Property<DateOnly>("Year")
                        .HasColumnType("Date")
                        .HasColumnName("year");

                    b.Property<DateOnly>("YearNavigationYear")
                        .HasColumnType("Date");

                    b.HasKey("Month");

                    b.HasIndex("YearNavigationYear");

                    b.ToTable("MonthlyReports");
                });

            modelBuilder.Entity("ECom.Services.Reports.Models.YearlyReport", b =>
                {
                    b.Property<DateOnly>("Year")
                        .HasColumnType("Date")
                        .HasColumnName("year");

                    b.Property<int>("Income")
                        .HasColumnType("int")
                        .HasColumnName("income");

                    b.Property<int>("Outcome")
                        .HasColumnType("int")
                        .HasColumnName("outcome");

                    b.Property<int>("Profit")
                        .HasColumnType("int")
                        .HasColumnName("profit");

                    b.Property<int>("SoldQuantity")
                        .HasColumnType("int")
                        .HasColumnName("sold_quantity");

                    b.HasKey("Year");

                    b.ToTable("YearlyReports");
                });

            modelBuilder.Entity("ECom.Services.Reports.Models.DailyReport", b =>
                {
                    b.HasOne("ECom.Services.Reports.Models.MonthlyReport", "MonthNavigation")
                        .WithMany("DailyReports")
                        .HasForeignKey("MonthNavigationMonth")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthNavigation");
                });

            modelBuilder.Entity("ECom.Services.Reports.Models.DailyReportDetail", b =>
                {
                    b.HasOne("ECom.Services.Reports.Models.DailyReport", "DateNavigation")
                        .WithMany("Details")
                        .HasForeignKey("DateNavigationDate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DateNavigation");
                });

            modelBuilder.Entity("ECom.Services.Reports.Models.MonthlyReport", b =>
                {
                    b.HasOne("ECom.Services.Reports.Models.YearlyReport", "YearNavigation")
                        .WithMany("MonthlyReports")
                        .HasForeignKey("YearNavigationYear")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YearNavigation");
                });

            modelBuilder.Entity("ECom.Services.Reports.Models.DailyReport", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("ECom.Services.Reports.Models.MonthlyReport", b =>
                {
                    b.Navigation("DailyReports");
                });

            modelBuilder.Entity("ECom.Services.Reports.Models.YearlyReport", b =>
                {
                    b.Navigation("MonthlyReports");
                });
#pragma warning restore 612, 618
        }
    }
}
