// <auto-generated />
using System;
using ECom.Services.Forecasts.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecom.Services.Forecast.Migrations
{
    [DbContext(typeof(ForecastDbContext))]
    partial class ForecastDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecom.Services.Forecasts.Models.Forecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("LastUpdated")
                        .HasColumnType("Date")
                        .HasColumnName("last_updated");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.HasKey("Id");

                    b.ToTable("Forecasts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastUpdated = new DateOnly(2023, 12, 23),
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("Ecom.Services.Forecasts.Models.ForecastDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ForecastId")
                        .HasColumnType("int")
                        .HasColumnName("forecast_id");

                    b.Property<int>("TotalSold")
                        .HasColumnType("int")
                        .HasColumnName("total_sold");

                    b.Property<DateOnly>("date")
                        .HasColumnType("Date")
                        .HasColumnName("date");

                    b.HasKey("Id");

                    b.HasIndex("ForecastId");

                    b.ToTable("ForecastDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ForecastId = 1,
                            TotalSold = 50,
                            date = new DateOnly(2023, 12, 24)
                        },
                        new
                        {
                            Id = 2,
                            ForecastId = 1,
                            TotalSold = 50,
                            date = new DateOnly(2023, 12, 25)
                        },
                        new
                        {
                            Id = 3,
                            ForecastId = 1,
                            TotalSold = 50,
                            date = new DateOnly(2023, 12, 26)
                        },
                        new
                        {
                            Id = 4,
                            ForecastId = 1,
                            TotalSold = 50,
                            date = new DateOnly(2023, 12, 27)
                        },
                        new
                        {
                            Id = 5,
                            ForecastId = 1,
                            TotalSold = 50,
                            date = new DateOnly(2023, 12, 28)
                        },
                        new
                        {
                            Id = 6,
                            ForecastId = 1,
                            TotalSold = 50,
                            date = new DateOnly(2023, 12, 29)
                        },
                        new
                        {
                            Id = 7,
                            ForecastId = 1,
                            TotalSold = 50,
                            date = new DateOnly(2023, 12, 30)
                        });
                });

            modelBuilder.Entity("Ecom.Services.Forecasts.Models.ForecastDetail", b =>
                {
                    b.HasOne("Ecom.Services.Forecasts.Models.Forecast", "Forecast")
                        .WithMany()
                        .HasForeignKey("ForecastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forecast");
                });
#pragma warning restore 612, 618
        }
    }
}
