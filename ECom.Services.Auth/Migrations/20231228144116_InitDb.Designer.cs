// <auto-generated />
using System;
using ECom.Services.Auth.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECom.Services.Auth.Migrations
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20231228144116_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECom.Services.Auth.Models.Account", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("email");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("is_admin");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.HasKey("Email");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Email = "20520442@gmail.com",
                            IsAdmin = true,
                            Password = "$2y$12$7OtfZjfBIIzSjzwH04JHeufIzffmVKZ6XF73QysK7QwjpZ5MM3y4S"
                        },
                        new
                        {
                            Email = "nguyenduc147862@gmail.com",
                            IsAdmin = false,
                            Password = "$2y$12$7OtfZjfBIIzSjzwH04JHeufIzffmVKZ6XF73QysK7QwjpZ5MM3y4S"
                        });
                });

            modelBuilder.Entity("ECom.Services.Auth.Models.Authenticator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("email");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2")
                        .HasColumnName("expiration");

                    b.HasKey("Id");

                    b.ToTable("Authenticators");
                });

            modelBuilder.Entity("ECom.Services.Auth.Models.User", b =>
                {
                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("avatar");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("email");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lastname");

                    b.Property<DateTime>("LoggedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("logged_date");

                    b.HasKey("PhoneNumber");

                    b.HasIndex("Email");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            PhoneNumber = "0703391661",
                            Address = "Ba Đình, TP. HCM",
                            Avatar = "https://lggcxbdwmetbsvmtuctl.supabase.co/storage/v1/object/public/avatar/default.png",
                            DateOfBirth = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "20520442@gmail.com",
                            Firstname = "Điền",
                            Lastname = "Trương Kim",
                            LoggedDate = new DateTime(2023, 12, 28, 21, 41, 16, 397, DateTimeKind.Local).AddTicks(2799)
                        },
                        new
                        {
                            PhoneNumber = "0944124232",
                            Address = "Kiến Tường, Long An",
                            Avatar = "https://lggcxbdwmetbsvmtuctl.supabase.co/storage/v1/object/public/avatar/default.png",
                            DateOfBirth = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nguyenduc147862@gmail.com",
                            Firstname = "Đức",
                            Lastname = "Nguyễn Trí",
                            LoggedDate = new DateTime(2023, 12, 28, 21, 41, 16, 397, DateTimeKind.Local).AddTicks(2902)
                        });
                });

            modelBuilder.Entity("ECom.Services.Auth.Models.User", b =>
                {
                    b.HasOne("ECom.Services.Auth.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
