// <auto-generated />
using System;
using ECom.Services.Sales.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECom.Services.Sales.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    partial class OrderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECom.Services.Sales.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lastname");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("status");

                    b.Property<int>("TotalCost")
                        .HasColumnType("int")
                        .HasColumnName("total_cost");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Ba Đình, Tp HCM",
                            Date = new DateTime(2023, 12, 1, 22, 58, 51, 916, DateTimeKind.Local).AddTicks(103),
                            Firstname = "Kim Điền",
                            Lastname = "Trương",
                            PhoneNumber = "0703391661",
                            Status = "0",
                            TotalCost = 500000
                        },
                        new
                        {
                            Id = 2,
                            Address = "Ba Đình, Tp HCM",
                            Date = new DateTime(2023, 12, 1, 22, 58, 51, 916, DateTimeKind.Local).AddTicks(118),
                            Firstname = "Kim Điền",
                            Lastname = "Trương",
                            PhoneNumber = "0703391661",
                            Status = "1",
                            TotalCost = 500000
                        },
                        new
                        {
                            Id = 3,
                            Address = "Ba Đình, Tp HCM",
                            Date = new DateTime(2023, 12, 1, 22, 58, 51, 916, DateTimeKind.Local).AddTicks(121),
                            Firstname = "Kim Điền",
                            Lastname = "Trương",
                            PhoneNumber = "0703391661",
                            Status = "2",
                            TotalCost = 500000
                        },
                        new
                        {
                            Id = 4,
                            Address = "Ba Đình, Tp HCM",
                            Date = new DateTime(2023, 12, 1, 22, 58, 51, 916, DateTimeKind.Local).AddTicks(124),
                            Firstname = "Kim Điền",
                            Lastname = "Trương",
                            PhoneNumber = "0703391661",
                            Status = "3",
                            TotalCost = 500000
                        });
                });

            modelBuilder.Entity("ECom.Services.Sales.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 1,
                            OrderId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 13,
                            OrderId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 8,
                            OrderId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 3,
                            OrderId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 6,
                            OrderId = 4,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("ECom.Services.Sales.Models.OrderDetail", b =>
                {
                    b.HasOne("ECom.Services.Sales.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ECom.Services.Sales.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
